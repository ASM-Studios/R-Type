name: deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - yma/windows_deployement # for test

env:
  EXECUTABLES:  r-type_client, r-type_server

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get current date
        id: date
        run: echo "date=$(TZ='Europe/Paris' date +'%Y.%m.%d.%H.%M')" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.date }}
          release_name: ${{ env.date }}
    outputs:
        upload_url: ${{ steps.create_release.outputs.upload_url }}

  build_and_deploy_linux:
    name: Build and deploy (Linux)
    runs-on: ubuntu-latest
    needs: create_release
    container:
      image: mathieubrl/rtype
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: ~/.cache/vcpkg/
          key: ${{ hashFiles('vcpkg.json') }}
      - name: Setup vcpkg
        run: |
          if [ ! -d "vcpkg" ]; then
            git clone https://github.com/microsoft/vcpkg.git
            ./vcpkg/bootstrap-vcpkg.sh
          fi
          ./vcpkg/vcpkg install
      - name: Compilation
        run: |
          ./release.sh
      - name: Create archive
        run: |
          zip -r linux_executables.zip r-type_client r-type_server
      - name: Upload Release Asset
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./linux_executables.zip
          asset_name: linux_executables.zip
          asset_content_type: application/zip

  build_and_deploy_windows:
    name: Build and deploy (Windows)
    runs-on: windows-latest
    needs: create_release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\AppData\Local\vcpkg\archives
          key: ${{ hashFiles('vcpkg.json') }}
      - name: Setup vcpkg
        run: |
          if (-not (Test-Path -Path "C:\vcpkg")) {
            git clone https://github.com/microsoft/vcpkg.git C:\vcpkg
            .\vcpkg\bootstrap-vcpkg.bat
          }
          C:\vcpkg\vcpkg install
      - uses: seanmiddleditch/gha-setup-ninja@master
      - run: |
          mkdir build
          cd build
          cmake -G Ninja ..
      - uses: ilammy/msvc-dev-cmd@v1.4.1
      - name: Compilation
        run: |
          mkdir cmake-build-windows
          cd cmake-build-windows
          cmake .. --preset=windows-from-windows
      - name: Create archive
        run: |
          Compress-Archive -Path r-type_client.exe, r-type_server.exe -DestinationPath windows_executables.zip
      - name: Upload Release Asset
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./windows_executables.zip
          asset_name: windows_executables.zip
          asset_content_type: application/zip
